<configuration>
	<appender name="STDOUT" class="ch.qos.logback.core.ConsoleAppender">
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<pattern>%-4relative [%thread] %-5level %logger{35} - %msg %n
			</pattern>
		</encoder>
	</appender>
	<appender name="FILE" class="ch.qos.logback.core.FileAppender">
		<file>./logs/client.log</file>
		<append>false</append>
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<pattern>%-4r %-5level %logger{35}: %msg%n</pattern>
		</encoder>
	</appender>
	<appender name="GUARDIAN_LOG" class="ch.qos.logback.core.FileAppender">
		<file>./logs/guardian.log</file>
		<append>false</append>
		<!-- encoders are assigned the type ch.qos.logback.classic.encoder.PatternLayoutEncoder 
			by default -->
		<encoder>
			<pattern>%-4r %-5level %logger{35}: %msg%n</pattern>
		</encoder>
		<evaluator class="ch.qos.logback.classic.boolex.OnMarkerEvaluator">
			<marker>GUARDIAN</marker>
		</evaluator>
	</appender>

	<root level="TRACE">
		<appender-ref ref="FILE" />
		<appender-ref ref="GUARDIAN_LOG" />
		<appender-ref ref="STDOUT" />
	</root>

	<!-- We want error logging from this logger to go to an extra appender. 
		It still inherits CONSOLE STDOUT from the root logger -->
	<logger name="junit" level="INFO">
		<appender-ref ref="STDOUT" />
	</logger>
</configuration>




